<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MTA</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MTA.styles.css" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.9.0/dist/summernote-lite.min.css" rel="stylesheet">

    <script src="https://cdn.tiny.cloud/1/qctgtklrsv711hgpgzdgmvfbc72z0b65z0k66rwkmgu0lfjw/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
      tinymce.init({
        selector: 'textarea#tiny',
            plugins: [
            'a11ychecker','advlist','advcode','advtable','autolink','checklist','markdown',
            'lists','link','image','charmap','preview','anchor','searchreplace','visualblocks',
            'powerpaste','fullscreen','formatpainter','insertdatetime','media','table','help','wordcount'
            ],
            toolbar: 'undo redo | a11ycheck casechange blocks | bold italic backcolor | alignleft aligncenter alignright alignjustify |' +
            'bullist numlist checklist outdent indent | removeformat | code table help'
      })
    </script>
    <style>
        /* General Body Styling */
        body {
            background-image: url('/Images/army-camouflage.png'); /* Camouflage background */
            background-size: cover;
            background-attachment: fixed;
            color: #d4d4d4; /* Soft gray for text readability */
            font-family: 'Arial', sans-serif;
        }

        /* Navbar Styling */
        .navbar {
            background-color: #0b3d0b; /* Dark evergreen */
            border-bottom: 3px solid #2b6b2b; /* Slightly lighter evergreen for accents */
        }

        .navbar-brand {
            font-family: 'Impact', sans-serif;
            font-size: 1.8rem;
            color: #4CAF50 !important; /* Bright green */
            text-transform: uppercase;
        }

        .navbar-nav .nav-link {
            color: #d4f4dd !important; /* Light green */
            font-weight: bold;
            text-transform: uppercase;
        }

            .navbar-nav .nav-link:hover {
                color: #e5ffeb !important; /* Very light green on hover */
            }

        /* Container Styling */
        .container {
            background-color: #102810; /* Very dark green */
            padding: 20px;
            border: 2px solid #2b6b2b; /* Evergreen border */
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.8);
            color: #d4f4dd; /* Light green text */
        }

        /* Footer Styling */
        footer {
            background-color: #0b3d0b; /* Dark evergreen */
            padding: 10px 0;
            text-align: center;
            color: #d4f4dd; /* Light green text */
            border-top: 3px solid #2b6b2b; /* Accent evergreen */
            font-weight: bold;
        }

        /* Rotating Image Styling */
        .rotating-image {
            position: fixed;
            width: 100px;
            height: 100px;
            z-index: 1000;
            border: 2px solid #4CAF50; /* Green border */
            border-radius: 50%; /* Circular image */
        }

        /* Form Input Styling */
        input[type="text"], textarea {
            background-color: #102810; /* Very dark green */
            color: #d4f4dd; /* Light green text */
            border: 2px solid #2b6b2b; /* Evergreen border */
            padding: 10px;
            border-radius: 5px;
            width: 100%;
        }

            input[type="text"]::placeholder, textarea::placeholder {
                color: #a1c4a3; /* Placeholder light green */
            }

            input[type="text"]:focus, textarea:focus {
                border-color: #4CAF50; /* Bright green when focused */
            }

        /* Button Styling */
        button {
            background-color: #2b6b2b; /* Evergreen */
            color: #d4f4dd; /* Light green text */
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            font-weight: bold;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

            button:hover {
                background-color: #4CAF50; /* Highlighted green */
                color: #102810; /* Dark green text */
            }

        .card {
            background-color: #0a0a0a; /* Black card background */
            border: 2px solid #2b6b2b; /* Evergreen border */
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
            padding: 15px;
            margin: 15px;
            color: #d4f4dd; /* Light green text */
        }
        /* Pagination Styling */
        .pagination a {
            background-color: #0b3d0b; /* Dark evergreen */
            color: #4CAF50; /* Bright green text */
            padding: 5px 10px;
            margin: 0 5px;
            text-decoration: none;
            border-radius: 3px;
            transition: background-color 0.3s;
        }

            .pagination a:hover {
                background-color: #000000; /* Bright green background */
                color: #0b3d0b; /* Dark evergreen text */
            }

        /* Table Styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            background-color: #102810; /* Very dark green */
            color: #d4f4dd; /* Light green text */
            border: 1px solid #2b6b2b; /* Evergreen border */
        }

            table th, table td {
                border: 1px solid #2b6b2b; /* Evergreen cell borders */
                padding: 10px;
                text-align: center;
            }

            table th {
                background-color: #0b3d0b; /* Dark evergreen header */
                color: #d4f4dd; /* Light green text */
                text-transform: uppercase;
            }

            table tr:nth-child(even) {
                background-color: #163a16; /* Slightly lighter green for even rows */
            }

            table tr:hover {
                background-color: #2b6b2b; /* Highlighted green */
            }

        /* Custom Heading Styles */
        h1, h2, h3, h4, h5, h6 {
            color: #4CAF50; /* Bright green headings */
            font-weight: bold;
            text-transform: uppercase;
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background-color: #4CAF50; /* Green scrollbar */
            border-radius: 5px;
        }

            ::-webkit-scrollbar-thumb:hover {
                background-color: #6BFF77; /* Highlighted green on hover */
            }


    </style>
</head>
<body>
    <img src="/Images/r3.jpg" alt="Rotating Image" class="rotating-image" id="rotatingImage" />
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Projects" asp-action="Index">MTA</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        @if (User.IsInRole("Marshall"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Projects" asp-action="Index">Show projects</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Projects" asp-action="New">Add project</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Departments" asp-action="Index">Show departments</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Users" asp-action="Index">Show personnel</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Missions" asp-action="Index">Missions</a>
                            </li>
                        }
                        @if (User.IsInRole("Commander"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Projects" asp-action="Index">Show projects</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Projects" asp-action="New">Add project</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Missions" asp-action="Index">Missions</a>
                            </li>
                        }
                        @if (User.IsInRole("User"))
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-area="" asp-controller="Projects" asp-action="Index">Show projects</a>
                            </li>
                        }
                    </ul>
                    <partial name="_LoginPartial" />
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.9.0/dist/summernote-lite.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/Summernote.js" asp-append-version="true"></script>

    <script>

        const rotatingImage = document.getElementById('rotatingImage');
        const imageSize = 100;
        let angle = 0;
        function updatePosition() {
            const windowWidth = window.innerWidth;
            const windowHeight = window.innerHeight;
            const radiusX = (windowWidth - imageSize) / 2;
            const radiusY = (windowHeight - imageSize) / 2;
            const x = windowWidth / 2 + radiusX * Math.cos(angle * Math.PI / 180) - imageSize / 2;
            const y = windowHeight / 2 + radiusY * Math.sin(angle * Math.PI / 180) - imageSize / 2;
            rotatingImage.style.left = `${x}px`;
            rotatingImage.style.top = `${y}px`;
            rotatingImage.style.transform = `rotate(${angle}deg)`;
            angle = (angle + 1) % 360;
        }
        setInterval(updatePosition, 16);
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
